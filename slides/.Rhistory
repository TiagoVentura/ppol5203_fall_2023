dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
`
dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
dict_exercise
dict_exercise.keys
dict_exercise.keys()
[dict_exercise.keys()]
list(dict_exercise.keys())
keys = list(dict_exercise.keys())
dict_exercise["tiago"]="Brazil"
dict_exercise.get("Ramy")
dict_new["Ramy"]=dict_exercise.get("Ramy")
dict_new={["Ramy":dict_exercise.get("Ramy")}
dict_new={"Ramy":dict_exercise.get("Ramy")}
dict_exercise.pop("Ramy")
dict_exercise
del dict_exercise["Victorie"]
print(dict_exercise)
babel = "That's just what translation is, I think. That's all speaking is. Listening to the other and trying to see past your own biases to glimpse what they're trying to say. Showing yourself to the world, and hoping someone else understands."
"Babel" in babel
babel.count("translation")
babel.index("translation")
babel[17]
babel[17:17+len("translation")]
babel.upper()
babel.replace("I ", "We ")
babel
punctuation = ",'.!"
print(babel)
# Define a string containing some punctuation marks.
punctuation = ",'.!"
# Iterate over: we will see this later.
for char in punctuation:
babel = babel.replace(char, "")
print(babel)
'''
babel = '''
That's just what translation is, I think.
That's all speaking is.
Listening to the other and trying to see past your own biases to glimpse what they're trying to say.
Showing yourself to the world, and hoping someone else understands.
'''
`
babel = "That's just what translation is, I think. That's all speaking is. Listening to the other and trying to see past your own biases to glimpse what they're trying to say. Showing yourself to the world, and hoping someone else understands."
getwd()
- [Solutions](_solutions_ex/_week_02_solution.html)
# Packages
library(tidyverse)
library(extrafont)
library(here)
library(ggalt)
library(lubridate)
# ggplot theme ------------------------------------------------------------
my_font <- "Palatino"
my_bkgd <- "white"
#my_bkgd <- "#f5f5f2"
pal <- RColorBrewer::brewer.pal(9, "Spectral")
my_theme <- theme(text = element_text(family = my_font, color = "#22211d"),
rect = element_rect(fill = my_bkgd),
plot.background = element_rect(fill = my_bkgd, color = NA),
panel.background = element_rect(fill = my_bkgd, color = NA),
panel.border = element_rect(color="black"),
strip.background = element_rect(color="black", fill="white"),
legend.background = element_rect(fill = my_bkgd, color = NA),
legend.key = element_rect(size = 6, fill = "white", colour = NA),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 14, family = my_font),
legend.title = element_text(size=14),
plot.title = element_text(size = 22, face = "bold"),
plot.subtitle = element_text(size=16, family=my_font),
axis.title= element_text(size=22),
axis.text = element_text(size=14),
axis.title.x = element_text(hjust=1),
strip.text = element_text(family = my_font, color = "#22211d",
size = 16, face="italic"),
plot.caption = element_text(size=12, family=my_font),
plot.margin =  unit(c(1,1,1,1), "cm"))
theme_set(theme_bw() + my_theme)
# Open data ---------------------------------------------------------------
getwd()
list.files(here("pipeline_phd"))
library(ggtext)
tm <- read_csv("~/Dropbox/pipeline_phd/pipeline_phd_2.csv")
tm <- tm %>%
mutate(across(c(submission, response), ~
ifelse(is.na(.x), "01-01-2021", .x))) %>%
mutate(across(c(submission, response), str_trim))  %>%
mutate(across(c(submission, response), mdy)) %>%
mutate(decision=str_to_title(decision)) %>%
mutate(Papers=fct_inorder(Papers)) %>%
mutate(decision=str_remove(decision, "First|Second|Third")) %>%
mutate(decision=fct_relevel(decision,
"Accepted", " Review", "R&R", "Under Review", "Reject")) %>%
group_by(Papers) %>%
mutate(accepted=ifelse(decision=="Accepted", TRUE, FALSE),
accepted=sum(accepted)) %>%
ungroup() %>%
mutate(papers_label=ifelse(accepted==1,
glue::glue("<b style='color:#D3DDDC'>{Papers}</b>"),
glue::glue("<b style='color:#FF0000'>{Papers}</b>")),
Journals_=ifelse(decision=="R&R", Journals, NA))
View(tm)
ggplot(tm, aes(y=fct_rev(Papers), x=submission, xend=response,
fill=fct_rev(decision),
shape=fct_rev(decision),
label=Journals_)) +
geom_dumbbell(size=3, shape=21, color="gray90") +
# geom_point(data=tm %>% filter(!is.na(accepted)),
#           aes(x=response, y=fct_rev(Papers)),
#          shape=23, fill="steelblue", size=3) +
labs(x=NULL, y=NULL,
title="Submissions Pipeline",
subtitle = "With Start Dates, Response Dates, Decision and Journals") +
ggrepel::geom_label_repel(nudge_y = -.4,
show.legend = FALSE,
fill="white") +
scale_x_date(breaks="6 months", date_labels = "%b-%y",
limits = c(as.Date("2019-05-16"), as.Date("2023-06-01"))) +
scale_fill_brewer(palette="RdBu", name="") +
theme(legend.position = "bottom",
panel.border = element_blank(),
panel.grid = element_line(linetype = "dashed")) +
geom_segment(y= 5, yend=5, x=0, xend=50, color="red") +
theme(axis.text.y = element_markdown()) +
scale_y_discrete(labels=rev(unique(tm$papers_label)))
install.packages("ggrepel")
# Packages
library(tidyverse)
library(extrafont)
library(here)
library(ggalt)
library(lubridate)
# ggplot theme ------------------------------------------------------------
my_font <- "Palatino"
my_bkgd <- "white"
#my_bkgd <- "#f5f5f2"
pal <- RColorBrewer::brewer.pal(9, "Spectral")
my_theme <- theme(text = element_text(family = my_font, color = "#22211d"),
rect = element_rect(fill = my_bkgd),
plot.background = element_rect(fill = my_bkgd, color = NA),
panel.background = element_rect(fill = my_bkgd, color = NA),
panel.border = element_rect(color="black"),
strip.background = element_rect(color="black", fill="white"),
legend.background = element_rect(fill = my_bkgd, color = NA),
legend.key = element_rect(size = 6, fill = "white", colour = NA),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 14, family = my_font),
legend.title = element_text(size=14),
plot.title = element_text(size = 22, face = "bold"),
plot.subtitle = element_text(size=16, family=my_font),
axis.title= element_text(size=22),
axis.text = element_text(size=14),
axis.title.x = element_text(hjust=1),
strip.text = element_text(family = my_font, color = "#22211d",
size = 16, face="italic"),
plot.caption = element_text(size=12, family=my_font),
plot.margin =  unit(c(1,1,1,1), "cm"))
theme_set(theme_bw() + my_theme)
# Open data ---------------------------------------------------------------
getwd()
list.files(here("pipeline_phd"))
library(ggtext)
tm <- read_csv("~/Dropbox/pipeline_phd/pipeline_phd_2.csv")
tm <- tm %>%
mutate(across(c(submission, response), ~
ifelse(is.na(.x), "01-01-2021", .x))) %>%
mutate(across(c(submission, response), str_trim))  %>%
mutate(across(c(submission, response), mdy)) %>%
mutate(decision=str_to_title(decision)) %>%
mutate(Papers=fct_inorder(Papers)) %>%
mutate(decision=str_remove(decision, "First|Second|Third")) %>%
mutate(decision=fct_relevel(decision,
"Accepted", " Review", "R&R", "Under Review", "Reject")) %>%
group_by(Papers) %>%
mutate(accepted=ifelse(decision=="Accepted", TRUE, FALSE),
accepted=sum(accepted)) %>%
ungroup() %>%
mutate(papers_label=ifelse(accepted==1,
glue::glue("<b style='color:#D3DDDC'>{Papers}</b>"),
glue::glue("<b style='color:#FF0000'>{Papers}</b>")),
Journals_=ifelse(decision=="R&R", Journals, NA))
View(tm)
ggplot(tm, aes(y=fct_rev(Papers), x=submission, xend=response,
fill=fct_rev(decision),
shape=fct_rev(decision),
label=Journals_)) +
geom_dumbbell(size=3, shape=21, color="gray90") +
# geom_point(data=tm %>% filter(!is.na(accepted)),
#           aes(x=response, y=fct_rev(Papers)),
#          shape=23, fill="steelblue", size=3) +
labs(x=NULL, y=NULL,
title="Submissions Pipeline",
subtitle = "With Start Dates, Response Dates, Decision and Journals") +
ggrepel::geom_label_repel(nudge_y = -.4,
show.legend = FALSE,
fill="white") +
scale_x_date(breaks="6 months", date_labels = "%b-%y",
limits = c(as.Date("2019-05-16"), as.Date("2023-06-01"))) +
scale_fill_brewer(palette="RdBu", name="") +
theme(legend.position = "bottom",
panel.border = element_blank(),
panel.grid = element_line(linetype = "dashed")) +
geom_segment(y= 5, yend=5, x=0, xend=50, color="red") +
theme(axis.text.y = element_markdown()) +
scale_y_discrete(labels=rev(unique(tm$papers_label)))
tm
View(tm)
ggplot(tm, aes(y=fct_rev(Papers), x=submission, xend=response,
fill=fct_rev(decision),
shape=fct_rev(decision),
label=Journals_)) +
geom_dumbbell(size=3, shape=21, color="gray90") +
# geom_point(data=tm %>% filter(!is.na(accepted)),
#           aes(x=response, y=fct_rev(Papers)),
#          shape=23, fill="steelblue", size=3) +
labs(x=NULL, y=NULL,
title="Submissions Pipeline",
subtitle = "With Start Dates, Response Dates, Decision and Journals") +
ggrepel::geom_label_repel(nudge_y = -.4,
show.legend = FALSE,
fill="white") +
scale_x_date(breaks="6 months", date_labels = "%b-%y",
limits = c(as.Date("2019-05-16"), as.Date("2024-01-01"))) +
scale_fill_brewer(palette="RdBu", name="") +
theme(legend.position = "bottom",
panel.border = element_blank(),
panel.grid = element_line(linetype = "dashed")) +
geom_segment(y= 5, yend=5, x=0, xend=50, color="red") +
theme(axis.text.y = element_markdown()) +
scale_y_discrete(labels=rev(unique(tm$papers_label)))
getwd()
list.files(here("pipeline_phd"))
library(ggtext)
tm <- read_csv("~/Dropbox/pipeline_phd/pipeline_phd_2.csv")
View(tm)
tm <- tm %>%
mutate(across(c(submission, response), ~
ifelse(is.na(.x), "01-01-2021", .x))) %>%
mutate(across(c(submission, response), str_trim))  %>%
mutate(across(c(submission, response), mdy)) %>%
mutate(decision=str_to_title(decision)) %>%
mutate(Papers=fct_inorder(Papers)) %>%
mutate(decision=str_remove(decision, "First|Second|Third")) %>%
mutate(decision=fct_relevel(decision,
"Accepted", " Review", "R&R", "Under Review", "Reject")) %>%
group_by(Papers) %>%
mutate(accepted=ifelse(decision=="Accepted", TRUE, FALSE),
accepted=sum(accepted)) %>%
ungroup() %>%
mutate(papers_label=ifelse(accepted==1,
glue::glue("<b style='color:#D3DDDC'>{Papers}</b>"),
glue::glue("<b style='color:#FF0000'>{Papers}</b>")),
Journals_=ifelse(decision=="R&R", Journals, NA))
ggplot(tm, aes(y=fct_rev(Papers), x=submission, xend=response,
fill=fct_rev(decision),
shape=fct_rev(decision),
label=Journals_)) +
geom_dumbbell(size=3, shape=21, color="gray90") +
# geom_point(data=tm %>% filter(!is.na(accepted)),
#           aes(x=response, y=fct_rev(Papers)),
#          shape=23, fill="steelblue", size=3) +
labs(x=NULL, y=NULL,
title="Submissions Pipeline",
subtitle = "With Start Dates, Response Dates, Decision and Journals") +
ggrepel::geom_label_repel(nudge_y = -.4,
show.legend = FALSE,
fill="white") +
scale_x_date(breaks="6 months", date_labels = "%b-%y",
limits = c(as.Date("2019-05-16"), as.Date("2024-01-01"))) +
scale_fill_brewer(palette="RdBu", name="") +
theme(legend.position = "bottom",
panel.border = element_blank(),
panel.grid = element_line(linetype = "dashed")) +
geom_segment(y= 5, yend=5, x=0, xend=50, color="red") +
theme(axis.text.y = element_markdown()) +
scale_y_discrete(labels=rev(unique(tm$papers_label)))
ggsave(filename = "/home/venturat/Dropbox/pipeline_phd/pipeline_phd.png",
width = 12, height = 8, units = "in",
pointsize = 12, bg = "white")
getwd()
ggsave(filename = "~/Dropbox/pipeline_phd/pipeline_phd.png",
width = 12, height = 8, units = "in",
pointsize = 12, bg = "white")
# Number papers per year
papers <- tm %>%
mutate(year_sub=year(submission)) %>%
select(year_sub, Papers) %>%
group_by(Papers) %>%
mutate(id = row_number())  %>%
filter(id==1) %>%
ungroup() %>%
count(year_sub) %>%
mutate(decision="New Papers",
id="New Papers") %>%
select(year_sub, decision, n, id)
# Number of Rejects, R&R and Acceptances
m <- tm %>%
mutate(year_sub=year(response)) %>%
count(year_sub, decision) %>%
filter(decision %in% c("Reject", "R&R", "Accepted")) %>%
mutate(id="Decisions") %>%
bind_rows(papers) %>%
mutate(decision=fct_relevel(decision,"Reject", "R&R", "Accepted"))
ggplot(m, aes(y=n,
x=id,
fill=decision,
color=decision,
alpha=decision,
group=decision,
label=n)) +
geom_bar(width = .6,
color="black",
position = position_dodge(width = 0.7),
stat="identity") +
geom_text(angle=0,
position=position_dodge(width=0.6),
vjust=-1,
size=8,
family=my_font,
alpha=.8) +
scale_fill_manual(values=adjustcolor(
c("black", "darkred",
"blue4", "green"), alpha.f = 0.5),
name="")+
scale_color_manual(values=adjustcolor(
c("black", "darkred",
"blue4", "green"), alpha.f = 0.5),
name="", guide=FALSE)+
scale_alpha_manual(values=c(.3,.5, .8, 1), guide=FALSE) +
labs(x=NULL, y=NULL,
title="Submissions Pipeline during the Ph.D.",
subtitle = "New Papers, and Number of Decisions per Year") +
facet_grid(~year_sub) +
theme(legend.position = "bottom") +
scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12),
limits = c(0, 12))
ggsave(filename = "~/Dropbox/pipeline_phd/pipeline_phd2.png",
width = 12, height = 8, units = "in",
pointsize = 12, bg = "white")
-   The **indentation blocks your statement**. It replaces the curly braces
reticulate::repl_python()
