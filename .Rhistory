dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
`
dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
dict_exercise = {"Ramy": "India",
"Victorie":"Haiti",
"Letty":"England",
"Robin":"Canton",
"Antoine":"Nigeria",
"Griffin":"China"}
dict_exercise
dict_exercise
dict_exercise.keys
dict_exercise.keys()
[dict_exercise.keys()]
list(dict_exercise.keys())
keys = list(dict_exercise.keys())
dict_exercise["tiago"]="Brazil"
dict_exercise.get("Ramy")
dict_new["Ramy"]=dict_exercise.get("Ramy")
dict_new={["Ramy":dict_exercise.get("Ramy")}
dict_new={"Ramy":dict_exercise.get("Ramy")}
dict_exercise.pop("Ramy")
dict_exercise
del dict_exercise["Victorie"]
print(dict_exercise)
babel = "That's just what translation is, I think. That's all speaking is. Listening to the other and trying to see past your own biases to glimpse what they're trying to say. Showing yourself to the world, and hoping someone else understands."
"Babel" in babel
babel.count("translation")
babel.index("translation")
babel[17]
babel[17:17+len("translation")]
babel.upper()
babel.replace("I ", "We ")
babel
punctuation = ",'.!"
print(babel)
# Define a string containing some punctuation marks.
punctuation = ",'.!"
# Iterate over: we will see this later.
for char in punctuation:
babel = babel.replace(char, "")
print(babel)
'''
babel = '''
That's just what translation is, I think.
That's all speaking is.
Listening to the other and trying to see past your own biases to glimpse what they're trying to say.
Showing yourself to the world, and hoping someone else understands.
'''
`
babel = "That's just what translation is, I think. That's all speaking is. Listening to the other and trying to see past your own biases to glimpse what they're trying to say. Showing yourself to the world, and hoping someone else understands."
